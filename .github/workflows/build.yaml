name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    env:
      # 定义可编译的文件夹列表
      BUILD_DIRS: "malody"

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Build Projects
        run: |
          for dir in $BUILD_DIRS; do
            echo "Building $dir"
            cmake -B ${{ steps.strings.outputs.build-output-dir }}/$dir \
                  -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
                  -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
                  -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                  -S ${{ github.workspace }}/$dir
            cmake --build ${{ steps.strings.outputs.build-output-dir }}/$dir --config ${{ matrix.build_type }}
          done

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: ${{ steps.strings.outputs.build-output-dir }}/**